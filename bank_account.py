# –ü—Ä–æ–≥—Ä–∞–º–º–∞ "–õ–∏—á–Ω—ã–π —Å—á–µ—Ç"
import json
import os


def choice_menu():  # menu
    my_menu = {'1': '–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞', '2': '–ø–æ–∫—É–ø–∫–∞', '3': '–∏—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫', '4': '–±–∞–ª–∞–Ω—Å', '5': '—Å—Ä–µ–¥–Ω–∏–π —á–µ–∫', '0': '–≤—ã—Ö–æ–¥'}
    print('.' * 21)
    for key, val in my_menu.items():
        print(f'{key}. {val}')
    print('.' * 21)
    to_do = input('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: ')
    return to_do


def bank_account(user_bank):  # 1. –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞
    try:
        new_sum = float(input('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞: '))
        if new_sum >= 10:
            user_bank += new_sum
        else:
            print('–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 10 ..\n')
    except:
        print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã!')
    return user_bank


def make_purchase(user_bank, user_purchase):  # 2. –ø–æ–∫—É–ø–∫–∞
    try:
        purchase_sum = float(input('–í–≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–∫—É–ø–∫–∏: '))
        if purchase_sum < 10:
            print('–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω–µ–µ 10 ..')
        elif purchase_sum <= user_bank:
            user_bank -= purchase_sum
            purchase = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏: ')
            user_purchase[purchase] = purchase_sum
        else:
            print('–î–µ–Ω–µ–≥ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç!')
    except:
        print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã!')
    return user_bank, user_purchase


def user_history(user_bank, user_purchase):  # 3. –∏—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫
    if len(user_purchase) > 0:
        for key, val in user_purchase.items():
            print(f' - –°—Ç–æ–∏–º–æ—Å—Ç—å {key} = {val}')
        print('–°–¥–µ–ª–∞–Ω–æ –ø–æ–∫—É–ø–æ–∫: ', len(user_purchase))
        average_check(user_purchase)
        bank_balance(user_bank)
        print()
    else:
        print('–ï—â–µ –Ω–µ –±—ã–ª–æ –ø–æ–∫—É–ø–æ–∫!')


def bank_balance(user_bank):  # 4. –±–∞–ª–∞–Ω—Å
    info = f'üí∞ –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á–µ—Ç—É: {user_bank}'
    print(info)
    return info


def average_check(user_purchase):  # 5. —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫
    if len(user_purchase) > 0:
        info = f'üõí–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ = {round(sum(user_purchase.values()) / len(user_purchase), 1)}'
    else:
        info = '–ï—â–µ –Ω–µ –±—ã–ª–æ –ø–æ–∫—É–ø–æ–∫!'
    print(info)
    return info


def my_bank():
    yes_no = True
    # –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –Ω–∞ —Å—á–µ—Ç—É 0, –∏–Ω–∞—á–µ –æ—Å—Ç–∞—Ç–æ–∫ –∏–∑ —Ñ–∞–π–ª–∞
    f_name = 'my_bank.txt'
    if os.path.exists(f_name):
        with open(f_name, 'r') as f:
            user_bank = float(f.read())
    else:
        user_bank = 0.

    j_file = 'purchases.json'
    if os.path.exists(j_file):
        with open(j_file) as f:  # –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
            user_purchase = json.load(f)
    else:
        user_purchase = {}

    while yes_no:
        choice = choice_menu()
        if choice == '1':
            user_bank = bank_account(user_bank)
        elif choice == '2':
            user_bank, user_purchase = make_purchase(user_bank, user_purchase)
        elif choice == '3':
            user_history(user_bank, user_purchase)
        elif choice == '4':
            bank_balance(user_bank)
        elif choice == '5':
            average_check(user_purchase)
        elif choice == '0':
            with open(f_name, 'w') as f:
                f.write(str(user_bank))
            with open(j_file, 'w') as f:
                json.dump(user_purchase, f)
            yes_no = False
        else:
            print('–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é\n')


if __name__ == '__main__':
    my_bank()
